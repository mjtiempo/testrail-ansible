
- hosts: all
  connection: local
  become: True
  vars_files:
  - vars/default.yaml

  tasks:
  - name: Install Apache
    apt: name={{ item }} update_cache=yes state=latest force_apt_get=yes
    loop: ['apache2']

  - name: Install MySQL Server
    apt: name={{ item }} update_cache=yes state=latest
    loop: ['mysql-server', 'python3-pymysql']

  - name: Install PHP {{ php_version }}
    apt: php{{ php_version }}

  - name: Install PHP Extensions
    apt: name={{ item }} update_cache=yes state=latest
    loop: ['libapache2-mod-php{{ php_version }}', 'php{{ php_version }}-mysql', 'php{{ php_version }}-curl', 'php{{ php_version }}-json', 'php{{ php_version }}-mbstring', 'php{{ php_version }}-xml', 'php{{ php_version }}-zip']

  
  - name: Download ioncube_loader
    get_url:
      url: https://downloads.ioncube.com/loader_downloads/ioncube_loaders_lin_x86-64.tar.gz
      dest: /tmp
    register: ioncube_loader

  - name: Extracting ioncube_loader
    unarchive:
      src: "{{ ioncube_loader.dest }}"
      dest: /tmp
      copy: no

  - name: Copy ioncube_loader to php_extensions dir
    copy: 
      src: "/tmp/ioncube/ioncube_loader_lin_{{ php_version }}.so"
      dest: "/usr/lib/php/{{ php_version }}/"
      remote_src: yes
      force: no

  - name: Install ioncube_loader ini to apache
    template:
      src: files/ioncube.j2
      dest: /etc/php/{{php_version}}/apache2/conf.d/00-ioncube.ini
    tags: ion

  - name: Install ioncube_loader ini to cli
    template:
      src: files/ioncube.j2
      dest: /etc/php/{{php_version}}/cli/conf.d/00-ioncube.ini
    notify: Reload Apache
    tags: ion

#Testrail Database Configuration
  - name: Create Testrail Database
    mysql_db:
      name: "{{ testrail_db_name }}"
      state: present
      login_unix_socket: /var/run/mysqld/mysqld.sock
    tags: db

  - name: Create Testrail DB user and with DB access
    mysql_user:
      name: "{{ testrail_db_user }}"
      password: "{{ testrail_db_password }}"
      priv: '{{ testrail_db_name }}.*:ALL'
      login_unix_socket: /var/run/mysqld/mysqld.sock
      update_password: on_create
    no_log: true
    tags: db

#Download and Install Testrail
  - name: Install Unzip
    apt: name=unzip
    tags: testrail

  - name: Download Testrail Installer
    get_url:
      url: https://secure.gurock.com/downloads/testrail/testrail-latest-ion72.zip
      dest: /tmp
    register: testrail_installer
    tags: testrail

  - name: Extract Testrail Installer
    unarchive:
      src: "{{ testrail_installer.dest }}"
      dest: "{{ testrail_install_folder }}"
      copy: no
      owner: "{{ testrail_folder_user }}"
      group: "{{ testrail_folder_group }}"
    tags: testrail

  - name: Create Additional Testrail Directories
    file:
      path: "{{ testrail_install_folder }}/testrail/{{item}}"
      state: directory
      owner: "{{ testrail_folder_user }}"
      group: "{{ testrail_folder_group }}"
    loop: ['attachment', 'report', 'audit', 'logs']
    tags: testrail

  handlers:
  - name: Reload Apache
    service:
      name: apache2
      state: reloaded
